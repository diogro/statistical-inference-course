[INCLUDE=present.mdk]
Title         : Dynamical models
Sub Title     : Including more science in our models
Author        : Diogo Melo
Affiliation   : Lewis-Sigler Institute of Integrative Genomics
Email         : damelo@princeton.edu
Reveal Theme  : solarized
Beamer Theme  : singapore
Package       : pstricks
Package       : pst-plot
Bibliography  : ../shared/references.bib
@html .math-inline, .math-display: color=#586e75

<script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS_SVG-full" type="text/javascript"></script>

[TITLE]

# Using domain expertise to define models

## Golf example

~ Center
![](../figures/golf_data.png)
~ 

## Golf logistic regression

~ Math
\begin{aligned}
y_i & \sim Binomial(n_i, p_i) \\
logit(p_i) &= \alpha + \beta x_i \\
\end{aligned}
~

## Fitted logistic

~ Center
![](../figures/golf_logistic.png)
~ 

## Thinking about the geometry

~ Center
![](../figures/golf_physical.png)
~ 

## P(ball falls in hole)

~ Math
P(|\text{angle}| < sin^{-1}(R-r/x)) = 2\phi \left ( \frac{sin^{-1}(R-r/x)}{\sigma} \right ) - 1
~ 

## geometric model

~ Math
\begin{aligned}
y_i & \sim Binomial(n_i, p_i) \\
p_i &=  2\phi \left ( \frac{sin^{-1}(R-r/x_i)}{\sigma} \right ) - 1\\
\end{aligned}
~

## Single parameter model 

~ Center
![](../figures/golf_parameter.png)
~ 

## geometric model in stan 

```
data {
  int J;
  int n[J];
  vector[J] x;
  int y[J];
  real r;
  real R;
}
transformed data {
  vector[J] threshold_angle = asin((R-r) ./ x);
}
parameters {
  real<lower=0> sigma;
}
model {
  vector[J] p = 2*Phi(threshold_angle / sigma) - 1;
  y ~ binomial(n, p);
}
```

## physical model fit 

~ Center
![](../figures/golf_model_fit.png){height: 500px}
~ 

- More: [https://mc-stan.org/users/documentation/case-studies/golf.html](https://mc-stan.org/users/documentation/case-studies/golf.html)

# Differential equations 

## Bacterial growth data

~ Center
![](../figures/growth_data.png)
~

## Stan differences function

```
functions {
  real[] logisticgrowth(real t,
                  real[] y,
                  real[] theta,
                  real[] x_r,
                  int[] x_i
                  ) {
    real dydt[x_i[1]];
    for (i in 1:x_i[1]){
      dydt[i] = theta[1] * y[i] * (1-y[i]/theta[2]);
    }
    return dydt;
  }
}
```
## Model with ODE 

```
model {
  real y_hat[T,n_wells];

  y_hat = integrate_ode_rk45(logisticgrowth, y0, t0, ts, theta, x_r, x_i);
  for (t in 1:T) {
    for (i in 1:n_wells) {
      z[t,i] ~ normal(y_hat[t,i], sigma);
    }
  }
  theta ~ cauchy(0,2.5);
  sigma ~ normal(0,0.01);
}
```

- More: [https://shug3502.github.io/blog/DifferentialEqnsStan](https://shug3502.github.io/blog/DifferentialEqnsStan)

## Pacific island tools dataset

How does population size affect the number of tools in a society?

Are larger populations able to develop and maintain larger tool kits?

- $P_i$: Population size in each island
- $T_i$: Number of tools in society

~ Slide { data-background=../figures/islands.png }
 
~

[butterfly]: ../figures/islands.png "Butterfly" { width=280px  }


## Pacific island data set

```
> library(rethinking)
> data(Kline)
> Kline
      culture population contact total_tools mean_TU
1    Malekula       1100     low          13     3.2
2     Tikopia       1500     low          22     4.7
3  Santa Cruz       3600     low          24     4.0
4         Yap       4791    high          43     5.0
5    Lau Fiji       7400    high          33     5.0
6   Trobriand       8000    high          19     4.0
7       Chuuk       9200    high          40     3.8
8       Manus      13000     low          28     6.6
9       Tonga      17500    high          55     5.4
10     Hawaii     275000     low          71     6.6
```

## Log population predicts tools count?

~ Center
![](../figures/island_tools.png)
~ 

## Poisson regression model

Standard model for count data would be something like:

~ Math
\begin{aligned}
T_i &\sim Poisson(\lambda_i) \\
log(\lambda_i) &= \alpha_{c[i]} + \beta_{c[i]} log(P_i) \\
\alpha_c &\sim Normal(3, 0.5) \\ 
\beta_c &\sim Normal(0, 0.2) \\
\end{aligned}
~ 

- $\alpha$ and $\beta$ can be made to change according to the contact variable

## Let parameters change according to contact

~ Center
![](../figures/island_glm_fit.png)
~ 

## Dynamic model of tool evolution

Change in number of tools depends on the rate of innovation minus tool loss:

~ Math
\Delta T = \alpha P ^ \beta - \gamma T
~ 

Setting $ \Delta T = 0$ and solving for $\hat T$
{.fragment} 

~ Math {.fragmented} 
\hat T = \frac{\alpha P ^ \beta}{\gamma}
~ 

## Fancy poisson regression model

~ Math
\begin{aligned}
T_i &\sim Poisson(\lambda_i) \\
\lambda_i &= \alpha P_i ^ \beta/\gamma \\
\alpha, \beta, \gamma &\sim Exponential(1) \\
\end{aligned}
~ 

Notice the lack of a link function! 

We can keep $\lambda_i$ positive by using appropriate priors.

## Taking distances into account

```
> IslandDist
            Ml  Ti  SC  Ya  Fi  Tr  Ch  Mn  To  Ha
Malekula   0.0 0.5 0.6 4.4 1.2 2.0 3.2 2.8 1.9 5.7
Tikopia    0.5 0.0 0.3 4.2 1.2 2.0 2.9 2.7 2.0 5.3
Santa Cruz 0.6 0.3 0.0 3.9 1.6 1.7 2.6 2.4 2.3 5.4
Yap        4.4 4.2 3.9 0.0 5.4 2.5 1.6 1.6 6.1 7.2
Lau Fiji   1.2 1.2 1.6 5.4 0.0 3.2 4.0 3.9 0.8 4.9
Trobriand  2.0 2.0 1.7 2.5 3.2 0.0 1.8 0.8 3.9 6.7
Chuuk      3.2 2.9 2.6 1.6 4.0 1.8 0.0 1.2 4.8 5.8
Manus      2.8 2.7 2.4 1.6 3.9 0.8 1.2 0.0 4.6 6.7
Tonga      1.9 2.0 2.3 6.1 0.8 3.9 4.8 4.6 0.0 5.0
Hawaii     5.7 5.3 5.4 7.2 4.9 6.7 5.8 6.7 5.0 0.0
```

## Random intercepts by society

The $k_i$ will be used to make close-by societies more similar

~ Math
\begin{aligned}
T_i &\sim Poisson(\lambda_i) \\
\lambda_i &= exp(k_{society[i]}) \alpha P_i ^ \beta / \gamma
\end{aligned}
~ 

- We can think of these parameters as adding a continuous "block structure"

## Gaussian process random intercepts

The random intercepts are given a covariance structure that depends on the distance between islands: 

~ Math
\begin{pmatrix}
k_1 \\
k_2 \\
\vdots \\
k_{10}
\end{pmatrix} \sim 
MVNormal \left ( 
\begin{pmatrix}
0 \\
0 \\
\vdots \\
0
\end{pmatrix}, 
K
\right )
~ 

~ Math
K_{ij}  = \eta^2 exp(-\rho^2 D^2_{ij})
~ 

## Covariance kernel

~ Math
\begin{aligned}
K_{ij}  &= \eta^2 exp(-\rho^2 D^2_{ij})  \\
\eta &\sim Exponential(2) \\
\rho &\sim Exponential(1/2) \\
\end{aligned}
~ 

## Prior covariance kernel

~ Center
![](../figures/prior_covariances.png)
~ 

## Full model definition

~ Math
\begin{aligned}
T_i &\sim Poisson(\lambda_i) \\
\lambda_i &= exp(k_{society[i]}) \alpha P_i ^ \beta / \gamma \\
\alpha, \beta, \gamma &\sim Exponential(1) \\
k_i &\sim \text{MV}Normal(0, K) \\
K_{ij}  &= \eta^2 exp(-\rho^2 D^2_{ij})  \\
\eta &\sim Exponential(2) \\
\rho &\sim Exponential(1/2) \\
\end{aligned}
~ 

## Gaussian process model code

```python
dat_list <- list(
  T = d$total_tools,
  P = d$population,
  society = d$society,
  Dmat=islandsDistMatrix )

m14.8 <- ulam(
  alist(
    T ~ dpois(lambda),
    lambda <- (a*P^b/g)*exp(k[society]),
    # non-centered Gaussian Process prior
    transpars> vector[10]: k <<- L_SIGMA * z,
    vector[10]: z ~ normal( 0 , 1 ),
    transpars> matrix[10,10]: L_SIGMA <<- cholesky_decompose( SIGMA ),
    transpars> matrix[10,10]: SIGMA <- cov_GPL2( Dmat , etasq , rhosq , 0.01 ),
    c(a,b,g) ~ dexp( 1 ),
    etasq ~ dexp( 2 ),
    rhosq ~ dexp( 0.5 )), 
  data=dat_list , chains=4 , cores=4 , iter=2000 )
```

## Posterior covariance kernel

~ Center
![](../figures/posterior_covariances.png)
~ 

## Estimated correlations

~ Center
![](../figures/island_correlations.png)
~ 

## Median model fit with correlations

~ Center
![](../figures/island_correlatons_fit.png)
~ 

## Phylogenetic models

~ Center
![](../figures/primates_nex.png){height: 600px}
~ 

## Animal models

~ Center
![](../figures/pedigree.png)
~ 

~ { font-size:20px}
Wilson et al. An ecologist's guide to the animal model. J Anim Ecol. 2010 79(1):13-26

doi: 10.1111/j.1365-2656.2009.01639.x 
~ 